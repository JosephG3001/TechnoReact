[{"C:\\GIT Projects\\TechnoReact\\src\\index.tsx":"1","C:\\GIT Projects\\TechnoReact\\src\\serviceWorker.ts":"2","C:\\GIT Projects\\TechnoReact\\src\\App.tsx":"3","C:\\GIT Projects\\TechnoReact\\src\\redux\\userManager.ts":"4","C:\\GIT Projects\\TechnoReact\\src\\techno.config.ts":"5","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\articles.reducer.ts":"6","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\article.reducer.ts":"7","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\news.reducer.ts":"8","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\sections.reducer.ts":"9","C:\\GIT Projects\\TechnoReact\\src\\components\\callback-page.tsx":"10","C:\\GIT Projects\\TechnoReact\\src\\components\\login-page.tsx":"11","C:\\GIT Projects\\TechnoReact\\src\\components\\silent-renew-page.tsx":"12","C:\\GIT Projects\\TechnoReact\\src\\components\\article\\article.tsx":"13","C:\\GIT Projects\\TechnoReact\\src\\components\\article\\articles.tsx":"14","C:\\GIT Projects\\TechnoReact\\src\\components\\landing-page\\landing-page.tsx":"15","C:\\GIT Projects\\TechnoReact\\src\\tools\\url-helper.ts":"16","C:\\GIT Projects\\TechnoReact\\src\\components\\news\\news.tsx":"17","C:\\GIT Projects\\TechnoReact\\src\\components\\particles\\particles-wrapper.tsx":"18","C:\\GIT Projects\\TechnoReact\\src\\api\\article-service.ts":"19","C:\\GIT Projects\\TechnoReact\\src\\api\\news-service.ts":"20","C:\\GIT Projects\\TechnoReact\\src\\components\\top-nav\\top-nav.tsx":"21","C:\\GIT Projects\\TechnoReact\\src\\tools\\toast.ts":"22","C:\\GIT Projects\\TechnoReact\\src\\api\\apiUtils.ts":"23","C:\\GIT Projects\\TechnoReact\\src\\api\\sections-service.ts":"24","C:\\GIT Projects\\TechnoReact\\src\\redux\\store.ts":"25","C:\\GIT Projects\\TechnoReact\\src\\components\\not-found\\my-404-page.tsx":"26","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\error.reducer.ts":"27","C:\\GIT Projects\\TechnoReact\\src\\components\\error-page\\error-page.tsx":"28","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\user.reducer.ts":"29","C:\\GIT Projects\\TechnoReact\\src\\layouts\\cms\\cms-layout.tsx":"30","C:\\GIT Projects\\TechnoReact\\src\\layouts\\public\\public-layout.tsx":"31","C:\\GIT Projects\\TechnoReact\\src\\layouts\\public\\public-sidebar\\public-sidebar.tsx":"32","C:\\GIT Projects\\TechnoReact\\src\\layouts\\public\\public-sidebar\\public-sidebar-items.tsx":"33","C:\\GIT Projects\\TechnoReact\\src\\layouts\\public\\public-sidebar\\public-sidebar-item.tsx":"34","C:\\GIT Projects\\TechnoReact\\src\\layouts\\cms\\cms-sidebar\\cms-sidebar.tsx":"35","C:\\GIT Projects\\TechnoReact\\src\\styles\\theme.ts":"36","C:\\GIT Projects\\TechnoReact\\src\\styles\\index.ts":"37","C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\content-explorer.tsx":"38","C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\section-menuitem.tsx":"39","C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\content-editor.tsx":"40","C:\\GIT Projects\\TechnoReact\\src\\components\\loading-spinner.tsx":"41","C:\\GIT Projects\\TechnoReact\\src\\hocs\\withModal.tsx":"42","C:\\GIT Projects\\TechnoReact\\src\\hocs\\withSidebar.tsx":"43","C:\\GIT Projects\\TechnoReact\\src\\components\\backgroundImage.tsx":"44","C:\\GIT Projects\\TechnoReact\\src\\components\\loading-page.tsx":"45","C:\\GIT Projects\\TechnoReact\\src\\components\\error-triangle.tsx":"46","C:\\GIT Projects\\TechnoReact\\src\\tools\\nameof.ts":"47","C:\\GIT Projects\\TechnoReact\\src\\inputs\\input-textbox.tsx":"48","C:\\GIT Projects\\TechnoReact\\src\\inputs\\techno-button.tsx":"49","C:\\GIT Projects\\TechnoReact\\src\\classes\\transaction-result.ts":"50","C:\\GIT Projects\\TechnoReact\\src\\classes\\section.ts":"51","C:\\GIT Projects\\TechnoReact\\src\\tools\\formUtils.ts":"52","C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\add-edit-section-modal.tsx":"53","C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\delete-section-modal.tsx":"54","C:\\GIT Projects\\TechnoReact\\src\\inputs\\input-single-select.tsx":"55","C:\\GIT Projects\\TechnoReact\\src\\inputs\\input-richtext-editor.tsx":"56","C:\\GIT Projects\\TechnoReact\\src\\inputs\\input-toggle-switch.tsx":"57","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\load-sections.ts":"58","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\update-section-in-redux.ts":"59","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\add-section-to-redux.ts":"60","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\remove-section-from-redux.ts":"61","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\add-article-to-redux.ts":"62","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\update-article-in-redux.ts":"63","C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\delete-article-modal.tsx":"64","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\remove-article-from-redux.ts":"65"},{"size":1152,"mtime":1625270647698,"results":"66","hashOfConfig":"67"},{"size":5301,"mtime":1616281117944,"results":"68","hashOfConfig":"67"},{"size":1251,"mtime":1625308711729,"results":"69","hashOfConfig":"67"},{"size":2773,"mtime":1626218345892,"results":"70","hashOfConfig":"67"},{"size":466,"mtime":1626215492384,"results":"71","hashOfConfig":"67"},{"size":1268,"mtime":1616803920631,"results":"72","hashOfConfig":"67"},{"size":2141,"mtime":1626393382331,"results":"73","hashOfConfig":"67"},{"size":1587,"mtime":1616931772666,"results":"74","hashOfConfig":"67"},{"size":2364,"mtime":1626389040494,"results":"75","hashOfConfig":"67"},{"size":1966,"mtime":1625089742067,"results":"76","hashOfConfig":"67"},{"size":706,"mtime":1625308648725,"results":"77","hashOfConfig":"67"},{"size":222,"mtime":1616887057267,"results":"78","hashOfConfig":"67"},{"size":2927,"mtime":1624751427549,"results":"79","hashOfConfig":"67"},{"size":4618,"mtime":1625091087418,"results":"80","hashOfConfig":"67"},{"size":731,"mtime":1616965488623,"results":"81","hashOfConfig":"67"},{"size":3363,"mtime":1616879202000,"results":"82","hashOfConfig":"67"},{"size":2288,"mtime":1625091043305,"results":"83","hashOfConfig":"67"},{"size":1488,"mtime":1616280914724,"results":"84","hashOfConfig":"85"},{"size":1293,"mtime":1626392372603,"results":"86","hashOfConfig":"67"},{"size":612,"mtime":1616286647630,"results":"87","hashOfConfig":"67"},{"size":3784,"mtime":1624829226880,"results":"88","hashOfConfig":"67"},{"size":716,"mtime":1626475330377,"results":"89","hashOfConfig":"67"},{"size":5832,"mtime":1626306966793,"results":"90","hashOfConfig":"67"},{"size":805,"mtime":1625357585934,"results":"91","hashOfConfig":"67"},{"size":1561,"mtime":1625436234412,"results":"92","hashOfConfig":"67"},{"size":745,"mtime":1616966618424,"results":"93","hashOfConfig":"67"},{"size":532,"mtime":1616630283201,"results":"94","hashOfConfig":"67"},{"size":1269,"mtime":1625012518156,"results":"95","hashOfConfig":"67"},{"size":1054,"mtime":1616939814826,"results":"96","hashOfConfig":"67"},{"size":2125,"mtime":1626296682185,"results":"97","hashOfConfig":"67"},{"size":1446,"mtime":1624830731112,"results":"98","hashOfConfig":"67"},{"size":525,"mtime":1626389444510,"results":"99","hashOfConfig":"67"},{"size":2596,"mtime":1625091139529,"results":"100","hashOfConfig":"67"},{"size":3333,"mtime":1625352041143,"results":"101","hashOfConfig":"67"},{"size":3016,"mtime":1624830900695,"results":"102","hashOfConfig":"67"},{"size":2151,"mtime":1625489825634,"results":"103","hashOfConfig":"67"},{"size":2627,"mtime":1625871086275,"results":"104","hashOfConfig":"67"},{"size":3680,"mtime":1626389123891,"results":"105","hashOfConfig":"67"},{"size":8285,"mtime":1626392931281,"results":"106","hashOfConfig":"67"},{"size":7848,"mtime":1626477470075,"results":"107","hashOfConfig":"67"},{"size":1245,"mtime":1625096540860,"results":"108","hashOfConfig":"67"},{"size":1416,"mtime":1625180531819,"results":"109","hashOfConfig":"67"},{"size":2109,"mtime":1624800505471,"results":"110","hashOfConfig":"67"},{"size":667,"mtime":1624748249603,"results":"111","hashOfConfig":"67"},{"size":652,"mtime":1625090185690,"results":"112","hashOfConfig":"67"},{"size":704,"mtime":1625091046618,"results":"113","hashOfConfig":"67"},{"size":92,"mtime":1617642825791,"results":"114","hashOfConfig":"67"},{"size":1742,"mtime":1626353949191,"results":"115","hashOfConfig":"67"},{"size":1374,"mtime":1626303069871,"results":"116","hashOfConfig":"67"},{"size":486,"mtime":1626305426524,"results":"117","hashOfConfig":"67"},{"size":367,"mtime":1625351857615,"results":"118","hashOfConfig":"67"},{"size":710,"mtime":1625352591248,"results":"119","hashOfConfig":"67"},{"size":5260,"mtime":1626389412862,"results":"120","hashOfConfig":"67"},{"size":1380,"mtime":1626389463551,"results":"121","hashOfConfig":"67"},{"size":3445,"mtime":1626475821331,"results":"122","hashOfConfig":"67"},{"size":4092,"mtime":1626300090325,"results":"123","hashOfConfig":"67"},{"size":691,"mtime":1625779685289,"results":"124","hashOfConfig":"67"},{"size":665,"mtime":1626388973495,"results":"125","hashOfConfig":"67"},{"size":922,"mtime":1626388819871,"results":"126","hashOfConfig":"67"},{"size":1103,"mtime":1626388919980,"results":"127","hashOfConfig":"67"},{"size":969,"mtime":1626389028676,"results":"128","hashOfConfig":"67"},{"size":1101,"mtime":1626391651123,"results":"129","hashOfConfig":"67"},{"size":1024,"mtime":1626391824380,"results":"130","hashOfConfig":"67"},{"size":1650,"mtime":1626477450902,"results":"131","hashOfConfig":"67"},{"size":837,"mtime":1626392200615,"results":"132","hashOfConfig":"67"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"h7tcj0",{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"135"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"135"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"46tv1m",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"135"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"135"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"C:\\GIT Projects\\TechnoReact\\src\\index.tsx",[],["269","270","271","272","273"],"C:\\GIT Projects\\TechnoReact\\src\\serviceWorker.ts",["274","275","276","277","278"],"/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable prettier/prettier */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","C:\\GIT Projects\\TechnoReact\\src\\App.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\userManager.ts",["279","280","281","282","283"],"/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { User, UserManager, UserManagerSettings } from \"oidc-client\";\r\nimport { createUserManager } from \"redux-oidc\";\r\nimport { Global } from \"../techno.config\";\r\n// import { UserActionTypes, INewAccessTokenActionType, INoTokenActionType } from '../redux/actions/userActions';\r\n// import { TeamsStore, buildTeamStore } from '../userState/teams';\r\n\r\nexport interface IAccessToken {\r\n  nbf: number;\r\n  exp: number;\r\n  iss: string;\r\n  aud: string[];\r\n  // eslint-disable-next-line camelcase\r\n  client_id: string;\r\n  sub: string;\r\n  // eslint-disable-next-line camelcase\r\n  auth_time: number;\r\n  idp: string;\r\n  permissions: string[];\r\n  teams: string[];\r\n  roles: string;\r\n  scope: string[];\r\n  amr: string[];\r\n}\r\n\r\nconst userManagerConfig: UserManagerSettings = {\r\n  client_id: \"reactSpa\",\r\n  redirect_uri: `${Global.spaUrl}/callback`,\r\n  response_type: \"code\",\r\n  scope: \"openid profile contentapi filestoreapi newsapi offline_access\",\r\n  authority: Global.identityUrl,\r\n  // silent_redirect_uri: `${Global.spaUrl}/silentrenew`,\r\n  automaticSilentRenew: true,\r\n  filterProtocolClaims: true,\r\n  loadUserInfo: true,\r\n  monitorSession: false,\r\n  includeIdTokenInSilentRenew: false,\r\n};\r\n\r\nconst updateAccessToken = (userManager: UserManager) => {\r\n  userManager.getUser().then((user: User | null) => {\r\n    if (user) {\r\n      // usersCurrentStoredToken = user.access_token;\r\n      // const tokenObj: IAccessToken = JWT.default(user.access_token);\r\n      // const teamsStore: TeamsStore = buildTeamStore(tokenObj);\r\n      // store.dispatch(newUserActionType);\r\n    } else {\r\n      // const noTokenAction:INoTokenActionType = {\r\n      //  type: UserActionTypes.NO_TOKEN,\r\n      // }\r\n      // store.dispatch(noTokenAction);\r\n    }\r\n  });\r\n};\r\n\r\nconst createManager = () => {\r\n  const localUserManager = createUserManager(userManagerConfig);\r\n\r\n  localUserManager.events.addUserSignedOut(() => {\r\n    console.log(\"addUserSignedOut\");\r\n    localUserManager.signinRedirect({\r\n      data: {\r\n        path: process.env.WEB_URL,\r\n      },\r\n    });\r\n  });\r\n\r\n  localUserManager.events.addSilentRenewError((error) => {\r\n    console.error(\"Error while renewing the access token\", error);\r\n  });\r\n\r\n  localUserManager.events.addAccessTokenExpiring((event: any) => {\r\n    console.log(\"Access Token Expiring\");\r\n  });\r\n\r\n  localUserManager.events.addAccessTokenExpired((event: any) => {\r\n    console.error(\"Access Token Expired\");\r\n  });\r\n\r\n  localUserManager.events.addUserLoaded((event: any) => {\r\n    console.log(\"User loaded / Silent refresh completed\");\r\n    updateAccessToken(localUserManager);\r\n  });\r\n\r\n  return localUserManager;\r\n};\r\n\r\nexport const userManager: UserManager = createManager();\r\n\r\nexport default userManager;\r\n","C:\\GIT Projects\\TechnoReact\\src\\techno.config.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\articles.reducer.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\article.reducer.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\news.reducer.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\sections.reducer.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\callback-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\login-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\silent-renew-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\article\\article.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\article\\articles.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\landing-page\\landing-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\tools\\url-helper.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\news\\news.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\particles\\particles-wrapper.tsx",[],["284","285","286","287","288"],"C:\\GIT Projects\\TechnoReact\\src\\api\\article-service.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\api\\news-service.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\top-nav\\top-nav.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\tools\\toast.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\api\\apiUtils.ts",["289","290","291","292","293"],"import { User } from \"oidc-client\";\r\nimport FileStoreResult from \"../classes/fileStoreResult\";\r\nimport TransactionError from \"../classes/transaction-error\";\r\nimport TransactionResult from \"../classes/transaction-result\";\r\nimport userManager from \"../redux/userManager\";\r\nimport { Global } from \"../techno.config\";\r\n\r\nexport function getHeaderWithAuthorization(): Promise<Headers> {\r\n  return userManager.getUser().then((user: User | null) => {\r\n    const headers = new Headers();\r\n    headers.append(\"Accept\", \"application/json\");\r\n    headers.append(\"content-type\", \"application/json\");\r\n    headers.append(\"Origin\", Global.identityUrl);\r\n    if (user) {\r\n      headers.append(\"Authorization\", `Bearer ${user.access_token}`);\r\n    }\r\n\r\n    return headers;\r\n  });\r\n}\r\n\r\n// export function getHeaders(token: string): Array<Object>{\r\n//   return [\r\n//       {'Accept': 'application/json'},\r\n//       {\"content-type\": \"application/json\"},\r\n//       {\"Authorization\": \"Bearer \" + token}\r\n//   ]\r\n// }\r\n\r\nexport function genericGet<TResult>(url: string): Promise<TResult> {\r\n  return fetch(url)\r\n    .then((response: Response) => {\r\n      if (response.status === 404 || response.status === 401) {\r\n        // NotFound was returned from C# so handle null object in your calling function\r\n        // return null;\r\n      }\r\n      const result = response.json();\r\n      return result;\r\n    })\r\n    .then((data: TResult) => {\r\n      return data;\r\n    });\r\n}\r\n\r\nexport const genericGetAuth = <TResult>(url: string): Promise<TResult> => {\r\n  return getHeaderWithAuthorization().then((headers: Headers) => {\r\n    return fetch(url, {\r\n      headers,\r\n    })\r\n      .then((response: Response) => {\r\n        if (response.status === 404 || response.status === 401) {\r\n          // NotFound was returned from C# so handle null object in your calling function\r\n          return null;\r\n        }\r\n        const result = response.json();\r\n        return result;\r\n      })\r\n      .then((data: TResult) => {\r\n        return data;\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(`Could not connect to back end: ${err}`);\r\n        throw err;\r\n      });\r\n  });\r\n};\r\n\r\nexport const genericPost = <TPostData, TResult>(\r\n  url: string,\r\n  data: TPostData\r\n): Promise<TransactionResult<TResult>> => {\r\n  return getHeaderWithAuthorization().then((headers: Headers) => {\r\n    const tResult = new TransactionResult<TResult>();\r\n    const content = JSON.stringify(data);\r\n    return fetch(url, {\r\n      headers,\r\n      method: \"POST\",\r\n      body: content,\r\n    })\r\n      .then((response) => {\r\n        // 400 (bad request) here\r\n        if (response.status === 400) {\r\n          return response.json().then((r: Array<TransactionError>) => {\r\n            tResult.success = false;\r\n            tResult.errors = r;\r\n            return tResult;\r\n          });\r\n        }\r\n\r\n        return response.json().then((r: TResult) => {\r\n          tResult.success = true;\r\n          tResult.model = r;\r\n          return tResult;\r\n        });\r\n      })\r\n      .catch((err: any) => {\r\n        // 500 (internal server error) here\r\n        console.log(`Could not connect to back end: ${err}`);\r\n        throw err;\r\n      });\r\n  });\r\n};\r\n\r\nexport const genericPut = <TPostData>(\r\n  url: string,\r\n  data: TPostData\r\n): Promise<TransactionResult<TPostData>> => {\r\n  return getHeaderWithAuthorization().then((headers: Headers) => {\r\n    const tResult = new TransactionResult<TPostData>();\r\n    const content = JSON.stringify(data);\r\n    return fetch(url, {\r\n      headers,\r\n      method: \"PUT\",\r\n      body: content,\r\n    })\r\n      .then((response) => {\r\n        // 400 (bad request) here\r\n        if (response.status === 400) {\r\n          return response.json().then((r: Array<TransactionError>) => {\r\n            tResult.success = false;\r\n            tResult.errors = r;\r\n            return tResult;\r\n          });\r\n        }\r\n        tResult.success = true;\r\n        tResult.model = data;\r\n        return tResult;\r\n      })\r\n      .catch((err: any) => {\r\n        // 500 (internal server error) here\r\n        console.log(`Could not connect to back end: ${err}`);\r\n        throw err;\r\n      });\r\n  });\r\n};\r\n\r\nexport const genericDelete = (\r\n  url: string\r\n): Promise<TransactionResult<undefined>> => {\r\n  return getHeaderWithAuthorization().then((headers: Headers) => {\r\n    const tResult = new TransactionResult<undefined>();\r\n    return fetch(url, {\r\n      headers,\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        // 400 (bad request) here\r\n        if (response.status === 400) {\r\n          return response.json().then((r: Array<TransactionError>) => {\r\n            tResult.success = false;\r\n            tResult.errors = r;\r\n            return tResult;\r\n          });\r\n        }\r\n        tResult.success = true;\r\n        return tResult;\r\n      })\r\n      .catch((err: any) => {\r\n        // 500 (internal server error) here\r\n        console.log(`Could not connect to back end: ${err}`);\r\n        throw err;\r\n      });\r\n  });\r\n};\r\n\r\nexport const postFileFormData = (\r\n  url: string,\r\n  blobInfo: any\r\n): Promise<FileStoreResult> => {\r\n  const promise = new Promise<FileStoreResult>((resolve, reject) => {\r\n    userManager.getUser().then((user: User | null) => {\r\n      const fd = new FormData();\r\n      fd.append(\"fileUpload\", blobInfo.blob(), blobInfo.filename());\r\n\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", url);\r\n      xhr.responseType = \"json\";\r\n      xhr.setRequestHeader(\"Authorization\", `Bearer ${user?.access_token}`);\r\n\r\n      xhr.onload = () => {\r\n        const result = xhr.response as FileStoreResult;\r\n        if (result) {\r\n          resolve(result);\r\n        } else {\r\n          console.log(result);\r\n          reject(result);\r\n        }\r\n      };\r\n\r\n      xhr.send(fd);\r\n    });\r\n  });\r\n  return promise;\r\n};\r\n","C:\\GIT Projects\\TechnoReact\\src\\api\\sections-service.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\store.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\not-found\\my-404-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\error.reducer.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\error-page\\error-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\user.reducer.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\layouts\\cms\\cms-layout.tsx",["294"],"import { User } from \"oidc-client\";\r\nimport React, { FC, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport BackgroundImage from \"../../components/backgroundImage\";\r\nimport ContentExplorer from \"../../components/cms/content-explorer\";\r\nimport LoadingPage from \"../../components/loading-page\";\r\nimport TopNav from \"../../components/top-nav/top-nav\";\r\nimport { AppState } from \"../../redux/store\";\r\nimport userManager from \"../../redux/userManager\";\r\nimport CMSSidebar from \"./cms-sidebar/cms-sidebar\";\r\n\r\nconst CMSLayout: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const loggedIn = useSelector(\r\n    (state: AppState) => state.oidcState.user && !state.oidcState.isLoadingUser\r\n  );\r\n\r\n  useEffect(() => {\r\n    userManager.getUser().then((user: User | null) => {\r\n      if (user === null) {\r\n        console.log(\"Redirecting to login....\");\r\n        userManager.signinRedirect({\r\n          state: {\r\n            path: window.location.pathname,\r\n          },\r\n        });\r\n      } else {\r\n        userManager.signinSilent().catch((error: Error) => {\r\n          if (\r\n            error.message.indexOf(\"login_required\") !== -1 ||\r\n            error.message.indexOf(\"invalid_grant\") !== -1\r\n          ) {\r\n            userManager.signinRedirect({\r\n              state: {\r\n                path: window.location.pathname,\r\n              },\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, [dispatch, loggedIn]);\r\n\r\n  return (\r\n    <>\r\n      {loggedIn ? (\r\n        <div className=\"App\">\r\n          <BackgroundImage />\r\n          <TopNav />\r\n          <CMSSidebar />\r\n          <header className=\"App-header\" />\r\n          <div className=\"root-content\">\r\n            <Switch>\r\n              <Route exact path=\"/cms/content\" component={ContentExplorer} />\r\n              <Redirect from=\"/cms\" to=\"/cms/content\" />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <LoadingPage labelText=\"CMS Redirecting to login...\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CMSLayout;\r\n","C:\\GIT Projects\\TechnoReact\\src\\layouts\\public\\public-layout.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\layouts\\public\\public-sidebar\\public-sidebar.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\layouts\\public\\public-sidebar\\public-sidebar-items.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\layouts\\public\\public-sidebar\\public-sidebar-item.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\layouts\\cms\\cms-sidebar\\cms-sidebar.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\styles\\theme.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\styles\\index.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\content-explorer.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\section-menuitem.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\content-editor.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\loading-spinner.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\hocs\\withModal.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\hocs\\withSidebar.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\backgroundImage.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\loading-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\error-triangle.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\tools\\nameof.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\inputs\\input-textbox.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\inputs\\techno-button.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\classes\\transaction-result.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\classes\\section.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\tools\\formUtils.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\add-edit-section-modal.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\delete-section-modal.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\inputs\\input-single-select.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\inputs\\input-richtext-editor.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\inputs\\input-toggle-switch.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\load-sections.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\update-section-in-redux.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\add-section-to-redux.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\remove-section-from-redux.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\add-article-to-redux.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\update-article-in-redux.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\delete-article-modal.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\section-thunks\\remove-article-from-redux.ts",[],{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","severity":1,"message":"306","line":54,"column":11,"nodeType":"307","messageId":"308","endLine":54,"endColumn":22},{"ruleId":"305","severity":1,"message":"306","line":82,"column":15,"nodeType":"307","messageId":"308","endLine":82,"endColumn":26},{"ruleId":"305","severity":1,"message":"306","line":95,"column":15,"nodeType":"307","messageId":"308","endLine":95,"endColumn":26},{"ruleId":"305","severity":1,"message":"306","line":107,"column":7,"nodeType":"307","messageId":"308","endLine":107,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":133,"column":7,"nodeType":"307","messageId":"308","endLine":133,"endColumn":18},{"ruleId":"305","severity":1,"message":"306","line":60,"column":5,"nodeType":"307","messageId":"308","endLine":60,"endColumn":16},{"ruleId":"305","severity":1,"message":"306","line":69,"column":5,"nodeType":"307","messageId":"308","endLine":69,"endColumn":18},{"ruleId":"305","severity":1,"message":"306","line":73,"column":5,"nodeType":"307","messageId":"308","endLine":73,"endColumn":16},{"ruleId":"305","severity":1,"message":"306","line":77,"column":5,"nodeType":"307","messageId":"308","endLine":77,"endColumn":18},{"ruleId":"305","severity":1,"message":"306","line":81,"column":5,"nodeType":"307","messageId":"308","endLine":81,"endColumn":16},{"ruleId":"295","replacedBy":"309"},{"ruleId":"297","replacedBy":"310"},{"ruleId":"299","replacedBy":"311"},{"ruleId":"301","replacedBy":"312"},{"ruleId":"303","replacedBy":"313"},{"ruleId":"305","severity":1,"message":"306","line":62,"column":9,"nodeType":"307","messageId":"308","endLine":62,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":98,"column":9,"nodeType":"307","messageId":"308","endLine":98,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":131,"column":9,"nodeType":"307","messageId":"308","endLine":131,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":160,"column":9,"nodeType":"307","messageId":"308","endLine":160,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":185,"column":11,"nodeType":"307","messageId":"308","endLine":185,"endColumn":22},{"ruleId":"305","severity":1,"message":"306","line":22,"column":9,"nodeType":"307","messageId":"308","endLine":22,"endColumn":20},"lines-around-directive",["314"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected",["314"],[],[],[],[],"padding-line-between-statements"]