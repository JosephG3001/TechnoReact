[{"C:\\GIT Projects\\TechnoReact\\src\\index.tsx":"1","C:\\GIT Projects\\TechnoReact\\src\\serviceWorker.ts":"2","C:\\GIT Projects\\TechnoReact\\src\\App.tsx":"3","C:\\GIT Projects\\TechnoReact\\src\\redux\\userManager.ts":"4","C:\\GIT Projects\\TechnoReact\\src\\techno.config.ts":"5","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\articles.reducer.ts":"6","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\article.reducer.ts":"7","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\news.reducer.ts":"8","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\sections.reducer.ts":"9","C:\\GIT Projects\\TechnoReact\\src\\components\\callback-page.tsx":"10","C:\\GIT Projects\\TechnoReact\\src\\components\\login-page.tsx":"11","C:\\GIT Projects\\TechnoReact\\src\\components\\silent-renew-page.tsx":"12","C:\\GIT Projects\\TechnoReact\\src\\components\\article\\article.tsx":"13","C:\\GIT Projects\\TechnoReact\\src\\components\\article\\articles.tsx":"14","C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\content.tsx":"15","C:\\GIT Projects\\TechnoReact\\src\\components\\landing-page\\landing-page.tsx":"16","C:\\GIT Projects\\TechnoReact\\src\\tools\\url-helper.ts":"17","C:\\GIT Projects\\TechnoReact\\src\\layouts\\cms-layout.tsx":"18","C:\\GIT Projects\\TechnoReact\\src\\layouts\\public-layout.tsx":"19","C:\\GIT Projects\\TechnoReact\\src\\components\\news\\news.tsx":"20","C:\\GIT Projects\\TechnoReact\\src\\components\\particles\\particles-wrapper.tsx":"21","C:\\GIT Projects\\TechnoReact\\src\\api\\article-service.ts":"22","C:\\GIT Projects\\TechnoReact\\src\\api\\news-service.ts":"23","C:\\GIT Projects\\TechnoReact\\src\\components\\sidebar\\sidebar.tsx":"24","C:\\GIT Projects\\TechnoReact\\src\\components\\top-nav\\top-nav.tsx":"25","C:\\GIT Projects\\TechnoReact\\src\\tools\\toast.ts":"26","C:\\GIT Projects\\TechnoReact\\src\\api\\apiUtils.ts":"27","C:\\GIT Projects\\TechnoReact\\src\\api\\sections-service.ts":"28","C:\\GIT Projects\\TechnoReact\\src\\components\\sidebar\\sidebar-items.tsx":"29","C:\\GIT Projects\\TechnoReact\\src\\components\\sidebar\\sidebar-item.tsx":"30","C:\\GIT Projects\\TechnoReact\\src\\tools\\collapse.ts":"31","C:\\GIT Projects\\TechnoReact\\src\\redux\\store.ts":"32","C:\\GIT Projects\\TechnoReact\\src\\components\\not-found\\my-404-page.tsx":"33","C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\error.reducer.ts":"34","C:\\GIT Projects\\TechnoReact\\src\\components\\error-page\\error-page.tsx":"35"},{"size":903,"mtime":1616803701426,"results":"36","hashOfConfig":"37"},{"size":5301,"mtime":1616281117944,"results":"38","hashOfConfig":"37"},{"size":950,"mtime":1616630339415,"results":"39","hashOfConfig":"37"},{"size":1837,"mtime":1616624108306,"results":"40","hashOfConfig":"37"},{"size":399,"mtime":1616281096244,"results":"41","hashOfConfig":"37"},{"size":1265,"mtime":1616715344965,"results":"42","hashOfConfig":"37"},{"size":1417,"mtime":1589906138156,"results":"43","hashOfConfig":"44"},{"size":1409,"mtime":1616715315976,"results":"45","hashOfConfig":"37"},{"size":2217,"mtime":1616715155563,"results":"46","hashOfConfig":"37"},{"size":2300,"mtime":1616712565032,"results":"47","hashOfConfig":"37"},{"size":816,"mtime":1616715624166,"results":"48","hashOfConfig":"37"},{"size":222,"mtime":1616281755077,"results":"49","hashOfConfig":"37"},{"size":2318,"mtime":1616545638483,"results":"50","hashOfConfig":"37"},{"size":2454,"mtime":1616545678669,"results":"51","hashOfConfig":"37"},{"size":131,"mtime":1616592526904,"results":"52","hashOfConfig":"37"},{"size":445,"mtime":1616544095070,"results":"53","hashOfConfig":"37"},{"size":3351,"mtime":1616714027057,"results":"54","hashOfConfig":"37"},{"size":1952,"mtime":1616629075545,"results":"55","hashOfConfig":"37"},{"size":1579,"mtime":1616592838401,"results":"56","hashOfConfig":"37"},{"size":1273,"mtime":1616715001217,"results":"57","hashOfConfig":"37"},{"size":1488,"mtime":1616280914724,"results":"58","hashOfConfig":"37"},{"size":589,"mtime":1616279926230,"results":"59","hashOfConfig":"37"},{"size":612,"mtime":1616286647630,"results":"60","hashOfConfig":"37"},{"size":2069,"mtime":1616715733662,"results":"61","hashOfConfig":"37"},{"size":2096,"mtime":1616280316385,"results":"62","hashOfConfig":"37"},{"size":389,"mtime":1616280283173,"results":"63","hashOfConfig":"37"},{"size":1509,"mtime":1616286619558,"results":"64","hashOfConfig":"37"},{"size":346,"mtime":1616591738166,"results":"65","hashOfConfig":"37"},{"size":1324,"mtime":1616594183639,"results":"66","hashOfConfig":"37"},{"size":1914,"mtime":1616288041849,"results":"67","hashOfConfig":"37"},{"size":421,"mtime":1616281056453,"results":"68","hashOfConfig":"37"},{"size":2704,"mtime":1616803669363,"results":"69","hashOfConfig":"37"},{"size":352,"mtime":1616624463851,"results":"70","hashOfConfig":"37"},{"size":532,"mtime":1616630283201,"results":"71","hashOfConfig":"37"},{"size":389,"mtime":1616630298936,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"46tv1m",{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":40,"warningCount":0,"fixableErrorCount":40,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},"1ynh9uq",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\GIT Projects\\TechnoReact\\src\\index.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\serviceWorker.ts",["150","151","152","153","154"],"/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable prettier/prettier */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",["155","156","157","158","159"],"C:\\GIT Projects\\TechnoReact\\src\\App.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\userManager.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\techno.config.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\articles.reducer.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\article.reducer.ts",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],"import ArticleEntity from './../../classes/article-entity';\r\nimport * as ArticleActions from './../actions/article.actions';\r\n\r\nexport interface IArticleState {\r\n    currentAction: ArticleActions.AllArticleActions;\r\n    article: ArticleEntity | null;\r\n}\r\n\r\nconst InitialArticleState: IArticleState = {\r\n    currentAction: ArticleActions.ARTICLE_IDLE,\r\n    article: null,\r\n}\r\n\r\nexport function articleReducer(state: IArticleState = InitialArticleState, action: ArticleActions.Actions): IArticleState {\r\n    switch (action.type) {\r\n        case (ArticleActions.ARTICLE_IDLE): {\r\n            return {\r\n                ...state,\r\n                currentAction: ArticleActions.ARTICLE_IDLE,\r\n            }\r\n        }\r\n\r\n        case (ArticleActions.LOADING_ARTICLE): {\r\n            return {\r\n                ...state,\r\n                currentAction: ArticleActions.LOADING_ARTICLE,\r\n            };\r\n        }\r\n\r\n        case (ArticleActions.LOADED_ARTICLE): {\r\n            return {\r\n                ...state,\r\n                currentAction: ArticleActions.LOADED_ARTICLE,\r\n                article: action.article,\r\n            };\r\n        }\r\n\r\n        case (ArticleActions.LOADING_ARTICLE_FAIL): {\r\n            return {\r\n                ...state,                \r\n                currentAction: ArticleActions.LOADING_ARTICLE_FAIL,\r\n            }\r\n        }        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}",["200","201","202","203","204"],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\news.reducer.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\sections.reducer.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\callback-page.tsx",["205","206","207"],"import { CircularProgress } from \"@material-ui/core\";\r\nimport { push } from \"connected-react-router\";\r\nimport { User } from \"oidc-client\";\r\nimport React from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { CallbackComponent } from \"redux-oidc\";\r\nimport { setError } from \"../redux/reducers/error.reducer\";\r\nimport userManager from \"../redux/userManager\";\r\n\r\nconst CallbackPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   debugger;\r\n  //   userManager\r\n  //     .signinRedirectCallback(signInParams)\r\n  //     .then((user: User) => {\r\n  //       debugger;\r\n  //       console.log(user);\r\n  //       updateAccessToken();\r\n  //       dispatch(push(\"/cms/content\"));\r\n  //     })\r\n  //     .catch((error: any) => {\r\n  //       // don't throw error for the generic oidc state error\r\n  //       if (error.message !== \"No state in response\") {\r\n  //         // dispatch({\r\n  //         //     type: ErrorActions.ADD_ERROR,\r\n  //         //     errorCode: 500,\r\n  //         //     errorMessage: \"Error occured in signinRedirectCallback: \" + error\r\n  //         // });\r\n  //         dispatch(push(\"/error\"));\r\n  //       }\r\n  //     });\r\n  // });\r\n  debugger;\r\n  const onSuccess = (user: User) => {\r\n    debugger;\r\n    const { path } = user.state || {};\r\n    dispatch(push(path || \"/cms/content\"));\r\n  };\r\n\r\n  const onError = (error: any) => {\r\n    // don't throw error for the generic oidc state error\r\n    debugger;\r\n    if (error.message !== \"No state in response\") {\r\n      // dispatch({\r\n      //   type: ErrorActions.ADD_ERROR,\r\n      //   errorCode: 500,\r\n      //   errorMessage: `Error occured in signinRedirectCallback: ${error}`,\r\n      // });\r\n      // alert('there was a probem');\r\n      dispatch(setError(`Error occured in signinRedirectCallback: ${error}`));\r\n\r\n      // technoHistory.push(\"/error\");\r\n\r\n      dispatch(push(\"/error\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CallbackComponent\r\n      userManager={userManager}\r\n      successCallback={onSuccess}\r\n      errorCallback={onError}\r\n    >\r\n      <div className=\"loading-spinner-container\">\r\n        <CircularProgress className=\"mat-spinner\" />\r\n        <div>Signing in...</div>\r\n      </div>\r\n    </CallbackComponent>\r\n  );\r\n};\r\nexport default connect()(CallbackPage);\r\n","C:\\GIT Projects\\TechnoReact\\src\\components\\login-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\silent-renew-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\article\\article.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\article\\articles.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\cms\\content.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\landing-page\\landing-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\tools\\url-helper.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\layouts\\cms-layout.tsx",["208"],"import { CircularProgress } from \"@material-ui/core\";\r\nimport { User } from \"oidc-client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Content from \"../components/cms/content\";\r\nimport Sidebar from \"../components/sidebar/sidebar\";\r\nimport { AppState } from \"../redux/store\";\r\nimport userManager from \"../redux/userManager\";\r\n\r\nconst CMSLayout = () => {\r\n  const dispatch = useDispatch();\r\n  const loggedIn = useSelector(\r\n    (state: AppState) => state.oidcState.user && !state.oidcState.isLoadingUser\r\n  );\r\n\r\n  useEffect(() => {\r\n    userManager.getUser().then((user: User | null) => {\r\n      if (user === null) {\r\n        console.log(\"Redirecting to login....\");\r\n        userManager.signinRedirect({\r\n          state: {\r\n            path: window.location.pathname,\r\n          },\r\n        });\r\n        // dispatch(push(\"/login\"));\r\n      } else {\r\n        userManager.signinSilent().catch((error: Error) => {\r\n          if (error.message.indexOf(\"login_required\") !== -1) {\r\n            userManager.signinRedirect({\r\n              state: {\r\n                path: window.location.pathname,\r\n              },\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, [dispatch, loggedIn]);\r\n\r\n  return (\r\n    <>\r\n      {loggedIn ? (\r\n        <div className=\"App\">\r\n          <Sidebar />\r\n          <header className=\"App-header\" />\r\n          <div className=\"router-outlet\">\r\n            <Switch>\r\n              <Route exact path=\"/cms/content\" component={Content} />\r\n              <Redirect from=\"/cms\" to=\"/cms/content\" />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"loading-spinner-container\">\r\n          <CircularProgress className=\"mat-spinner\" />\r\n          <div>Redirecting...</div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CMSLayout;\r\n","C:\\GIT Projects\\TechnoReact\\src\\layouts\\public-layout.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\news\\news.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\particles\\particles-wrapper.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\api\\article-service.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\api\\news-service.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\sidebar\\sidebar.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\top-nav\\top-nav.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\tools\\toast.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\api\\apiUtils.ts",["209"],"import { User } from \"oidc-client\";\r\nimport userManager from \"../redux/userManager\";\r\nimport { Global } from \"../techno.config\";\r\n\r\nexport function getHeaderWithAuthorization(): Promise<Headers> {\r\n  return userManager.getUser().then((user: User | null) => {\r\n    const headers = new Headers();\r\n    headers.append(\"Accept\", \"application/json\");\r\n    headers.append(\"content-type\", \"application/json\");\r\n    headers.append(\"Origin\", Global.identityUrl);\r\n    if (user) {\r\n      headers.append(\"Authorization\", `Bearer ${user.access_token}`);\r\n    }\r\n\r\n    return headers;\r\n  });\r\n}\r\n\r\n// export function getHeaders(token: string): Array<Object>{\r\n//   return [\r\n//       {'Accept': 'application/json'},\r\n//       {\"content-type\": \"application/json\"},\r\n//       {\"Authorization\": \"Bearer \" + token}\r\n//   ]\r\n// }\r\n\r\nexport function genericGet<TResult>(url: string): Promise<TResult> {\r\n  return getHeaderWithAuthorization().then((headers: Headers) => {\r\n    return fetch(url, {\r\n      headers,\r\n    })\r\n      .then((response: Response) => {\r\n        if (response.status === 404 || response.status === 401) {\r\n          // NotFound was returned from C# so handle null object in your calling function\r\n          return null;\r\n        }\r\n        const result = response.json();\r\n        return result;\r\n      })\r\n      .then((data: TResult) => {\r\n        return data;\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(`Could not connect to back end: ${err}`);\r\n        throw err;\r\n      });\r\n  });\r\n}\r\n","C:\\GIT Projects\\TechnoReact\\src\\api\\sections-service.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\sidebar\\sidebar-items.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\sidebar\\sidebar-item.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\tools\\collapse.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\store.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\not-found\\my-404-page.tsx",[],"C:\\GIT Projects\\TechnoReact\\src\\redux\\reducers\\error.reducer.ts",[],"C:\\GIT Projects\\TechnoReact\\src\\components\\error-page\\error-page.tsx",[],{"ruleId":"210","severity":1,"message":"211","line":54,"column":11,"nodeType":"212","messageId":"213","endLine":54,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":82,"column":15,"nodeType":"212","messageId":"213","endLine":82,"endColumn":26},{"ruleId":"210","severity":1,"message":"211","line":95,"column":15,"nodeType":"212","messageId":"213","endLine":95,"endColumn":26},{"ruleId":"210","severity":1,"message":"211","line":107,"column":7,"nodeType":"212","messageId":"213","endLine":107,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":133,"column":7,"nodeType":"212","messageId":"213","endLine":133,"endColumn":18},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":2,"message":"225","line":1,"column":27,"nodeType":null,"endLine":1,"endColumn":59,"fix":"226"},{"ruleId":"227","severity":2,"message":"228","line":1,"column":27,"nodeType":"229","endLine":1,"endColumn":59,"fix":"230"},{"ruleId":"224","severity":2,"message":"231","line":2,"column":33,"nodeType":null,"endLine":2,"endColumn":63,"fix":"232"},{"ruleId":"227","severity":2,"message":"233","line":2,"column":33,"nodeType":"229","endLine":2,"endColumn":63,"fix":"234"},{"ruleId":"224","severity":2,"message":"235","line":5,"column":3,"nodeType":null,"endLine":5,"endColumn":5,"fix":"236"},{"ruleId":"224","severity":2,"message":"235","line":6,"column":1,"nodeType":null,"endLine":6,"endColumn":3,"fix":"237"},{"ruleId":"224","severity":2,"message":"235","line":10,"column":3,"nodeType":null,"endLine":10,"endColumn":5,"fix":"238"},{"ruleId":"224","severity":2,"message":"239","line":11,"column":1,"nodeType":null,"endLine":11,"endColumn":5,"fix":"240"},{"ruleId":"224","severity":2,"message":"241","line":12,"column":2,"nodeType":null,"endLine":12,"endColumn":2,"fix":"242"},{"ruleId":"224","severity":2,"message":"243","line":14,"column":32,"nodeType":null,"endLine":14,"endColumn":106,"fix":"244"},{"ruleId":"224","severity":2,"message":"235","line":15,"column":3,"nodeType":null,"endLine":15,"endColumn":5,"fix":"245"},{"ruleId":"224","severity":2,"message":"246","line":16,"column":1,"nodeType":null,"endLine":16,"endColumn":43,"fix":"247"},{"ruleId":"224","severity":2,"message":"248","line":17,"column":1,"nodeType":null,"endLine":17,"endColumn":13,"fix":"249"},{"ruleId":"224","severity":2,"message":"250","line":18,"column":1,"nodeType":null,"endLine":18,"endColumn":17,"fix":"251"},{"ruleId":"224","severity":2,"message":"252","line":19,"column":1,"nodeType":null,"endLine":19,"endColumn":9,"fix":"253"},{"ruleId":"224","severity":2,"message":"254","line":20,"column":1,"nodeType":null,"endLine":20,"endColumn":14,"fix":"255"},{"ruleId":"224","severity":2,"message":"256","line":21,"column":1,"nodeType":null,"endLine":21,"endColumn":9,"fix":"257"},{"ruleId":"224","severity":2,"message":"258","line":23,"column":1,"nodeType":null,"endLine":23,"endColumn":46,"fix":"259"},{"ruleId":"224","severity":2,"message":"260","line":24,"column":1,"nodeType":null,"endLine":24,"endColumn":7,"fix":"261"},{"ruleId":"224","severity":2,"message":"250","line":25,"column":1,"nodeType":null,"endLine":25,"endColumn":17,"fix":"262"},{"ruleId":"224","severity":2,"message":"252","line":26,"column":1,"nodeType":null,"endLine":26,"endColumn":9,"fix":"263"},{"ruleId":"224","severity":2,"message":"248","line":27,"column":1,"nodeType":null,"endLine":27,"endColumn":13,"fix":"264"},{"ruleId":"224","severity":2,"message":"256","line":28,"column":1,"nodeType":null,"endLine":28,"endColumn":9,"fix":"265"},{"ruleId":"224","severity":2,"message":"266","line":30,"column":1,"nodeType":null,"endLine":30,"endColumn":45,"fix":"267"},{"ruleId":"224","severity":2,"message":"248","line":31,"column":1,"nodeType":null,"endLine":31,"endColumn":13,"fix":"268"},{"ruleId":"224","severity":2,"message":"250","line":32,"column":1,"nodeType":null,"endLine":32,"endColumn":17,"fix":"269"},{"ruleId":"224","severity":2,"message":"250","line":33,"column":1,"nodeType":null,"endLine":33,"endColumn":17,"fix":"270"},{"ruleId":"224","severity":2,"message":"252","line":34,"column":9,"nodeType":null,"endLine":34,"endColumn":17,"fix":"271"},{"ruleId":"224","severity":2,"message":"248","line":35,"column":1,"nodeType":null,"endLine":35,"endColumn":13,"fix":"272"},{"ruleId":"224","severity":2,"message":"256","line":36,"column":1,"nodeType":null,"endLine":36,"endColumn":9,"fix":"273"},{"ruleId":"224","severity":2,"message":"274","line":38,"column":1,"nodeType":null,"endLine":38,"endColumn":51,"fix":"275"},{"ruleId":"224","severity":2,"message":"260","line":39,"column":7,"nodeType":null,"endLine":39,"endColumn":13,"fix":"276"},{"ruleId":"224","severity":2,"message":"277","line":40,"column":1,"nodeType":null,"endLine":40,"endColumn":42,"fix":"278"},{"ruleId":"224","severity":2,"message":"252","line":41,"column":1,"nodeType":null,"endLine":41,"endColumn":9,"fix":"279"},{"ruleId":"224","severity":2,"message":"254","line":42,"column":1,"nodeType":null,"endLine":42,"endColumn":14,"fix":"280"},{"ruleId":"224","severity":2,"message":"281","line":43,"column":1,"nodeType":null,"endLine":43,"endColumn":18,"fix":"282"},{"ruleId":"224","severity":2,"message":"283","line":45,"column":5,"nodeType":null,"endLine":45,"endColumn":9,"fix":"284"},{"ruleId":"224","severity":2,"message":"248","line":46,"column":1,"nodeType":null,"endLine":46,"endColumn":13,"fix":"285"},{"ruleId":"224","severity":2,"message":"235","line":47,"column":3,"nodeType":null,"endLine":47,"endColumn":5,"fix":"286"},{"ruleId":"224","severity":2,"message":"287","line":48,"column":2,"nodeType":null,"endLine":48,"endColumn":2,"fix":"288"},{"ruleId":"214","replacedBy":"289"},{"ruleId":"216","replacedBy":"290"},{"ruleId":"218","replacedBy":"291"},{"ruleId":"220","replacedBy":"292"},{"ruleId":"222","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":35,"column":3,"nodeType":"296","messageId":"213","endLine":35,"endColumn":12},{"ruleId":"294","severity":1,"message":"295","line":37,"column":5,"nodeType":"296","messageId":"213","endLine":37,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":44,"column":5,"nodeType":"296","messageId":"213","endLine":44,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":20,"column":9,"nodeType":"212","messageId":"213","endLine":20,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":44,"column":9,"nodeType":"212","messageId":"213","endLine":44,"endColumn":20},"no-console","Unexpected console statement.","MemberExpression","unexpected","lines-around-directive",["297"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"prettier/prettier","Replace `'./../../classes/article-entity'` with `\"./../../classes/article-entity\"`",{"range":"298","text":"299"},"import/no-useless-path-segments","Useless path segments for \"./../../classes/article-entity\", should be \"../../classes/article-entity\"","Literal",{"range":"300","text":"301"},"Replace `'./../actions/article.actions'` with `\"./../actions/article.actions\"`",{"range":"302","text":"303"},"Useless path segments for \"./../actions/article.actions\", should be \"../actions/article.actions\"",{"range":"304","text":"305"},"Delete `··`",{"range":"306","text":"307"},{"range":"308","text":"307"},{"range":"309","text":"307"},"Replace `····` with `··`",{"range":"310","text":"311"},"Insert `;`",{"range":"312","text":"313"},"Replace `state:·IArticleState·=·InitialArticleState,·action:·ArticleActions.Actions` with `␍⏎··state:·IArticleState·=·InitialArticleState,␍⏎··action:·ArticleActions.Actions␍⏎`",{"range":"314","text":"315"},{"range":"316","text":"307"},"Replace `········case·(ArticleActions.ARTICLE_IDLE)` with `····case·ArticleActions.ARTICLE_IDLE`",{"range":"317","text":"318"},"Replace `············` with `······`",{"range":"319","text":"320"},"Replace `················` with `········`",{"range":"321","text":"322"},"Delete `········`",{"range":"323","text":"307"},"Replace `············}` with `······};`",{"range":"324","text":"325"},"Replace `········` with `····`",{"range":"326","text":"327"},"Replace `········case·(ArticleActions.LOADING_ARTICLE)` with `····case·ArticleActions.LOADING_ARTICLE`",{"range":"328","text":"329"},"Delete `······`",{"range":"330","text":"307"},{"range":"331","text":"322"},{"range":"332","text":"307"},{"range":"333","text":"320"},{"range":"334","text":"327"},"Replace `········case·(ArticleActions.LOADED_ARTICLE)` with `····case·ArticleActions.LOADED_ARTICLE`",{"range":"335","text":"336"},{"range":"337","text":"320"},{"range":"338","text":"322"},{"range":"339","text":"322"},{"range":"340","text":"307"},{"range":"341","text":"320"},{"range":"342","text":"327"},"Replace `········case·(ArticleActions.LOADING_ARTICLE_FAIL)` with `····case·ArticleActions.LOADING_ARTICLE_FAIL`",{"range":"343","text":"344"},{"range":"345","text":"307"},"Replace `················...state,················` with `········...state,`",{"range":"346","text":"347"},{"range":"348","text":"307"},{"range":"349","text":"325"},"Replace `········}········` with `····}`",{"range":"350","text":"351"},"Delete `····`",{"range":"352","text":"307"},{"range":"353","text":"320"},{"range":"354","text":"307"},"Insert `␍⏎`",{"range":"355","text":"356"},["297"],[],[],[],[],"no-debugger","Unexpected 'debugger' statement.","DebuggerStatement","padding-line-between-statements",[26,58],"\"./../../classes/article-entity\"",[26,58],"\"../../classes/article-entity\"",[93,123],"\"./../actions/article.actions\"",[93,123],"\"../actions/article.actions\"",[164,166],"",[216,218],[305,307],[352,356],"  ",[373,373],";",[408,482],"\r\n  state: IArticleState = InitialArticleState,\r\n  action: ArticleActions.Actions\r\n",[504,506],[530,572],"    case ArticleActions.ARTICLE_IDLE",[577,589],"      ",[599,615],"        ",[626,634],[687,700],"      };",[702,710],"    ",[715,760],"    case ArticleActions.LOADING_ARTICLE",[765,771],[787,803],[814,822],[878,890],[894,902],[907,951],"    case ArticleActions.LOADED_ARTICLE",[956,968],[978,994],[1005,1021],[1076,1084],[1110,1122],[1126,1134],[1139,1189],"    case ArticleActions.LOADING_ARTICLE_FAIL",[1200,1206],[1216,1257],"        ...state,",[1259,1267],[1328,1341],[1343,1360],"    }",[1368,1372],[1382,1394],[1411,1413],[1417,1417],"\r\n"]